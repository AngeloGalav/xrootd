/*****************************************************************************/
/*                                                                           */
/*                             initRTMySQL.mysql                             */
/*                                                                           */
/* (c) 2005 by the Board of Trustees of the Leland Stanford, Jr., University */
/*                            All Rights Reserved                            */
/*       Produced by Jacek Becla for Stanford University under contract      */
/*              DE-AC02-76SF00515 with the Department of Energy              */
/*****************************************************************************/

# $Id$

DROP DATABASE IF EXISTS xrdmon_kan;

CREATE DATABASE IF NOT EXISTS xrdmon_kan;
USE xrdmon_kan;

CREATE TABLE IF NOT EXISTS rtOpenedSessions (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userId        INT NOT NULL,
  pId           INT NOT NULL,
  clientHId     INT NOT NULL,
  serverHId     INT NOT NULL
);
CREATE INDEX rtOpenedSession_id_index        USING BTREE ON rtOpenedSessions(id);
CREATE INDEX rtOpenedSession_userId_index    USING BTREE ON rtOpenedSessions(userId);
CREATE INDEX rtOpenedSession_pId_index       USING BTREE ON rtOpenedSessions(pId);
CREATE INDEX rtOpenedSession_clientHId_index USING BTREE ON rtOpenedSessions(clientHId);
CREATE INDEX rtOpenedSession_serverHId_index USING BTREE ON rtOpenedSessions(serverHId);



CREATE TABLE IF NOT EXISTS rtClosedSessions (
  id            INT NOT NULL PRIMARY KEY,
  userId        INT NOT NULL,
  pId           INT NOT NULL,
  clientHId     INT NOT NULL,
  serverHId     INT NOT NULL,
  duration      INT NOT NULL,
  disconnectT   DATETIME NOT NULL
);
CREATE INDEX rtClosedSession_id_index        USING BTREE ON rtClosedSessions(id);
CREATE INDEX rtClosedSession_userId_index    USING BTREE ON rtClosedSessions(userId);
CREATE INDEX rtClosedSession_pId_index       USING BTREE ON rtClosedSessions(pId);
CREATE INDEX rtClosedSession_clientHId_index USING BTREE ON rtClosedSessions(clientHId);
CREATE INDEX rtClosedSession_serverHId_index USING BTREE ON rtClosedSessions(serverHId);



CREATE TABLE IF NOT EXISTS rtOpenedFiles (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  sessionId     INT NOT NULL,
  pathId        INT NOT NULL,
  openT         DATETIME NOT NULL
);
CREATE INDEX rtOpenedFiles_id_index        USING BTREE ON rtOpenedFiles(id);
CREATE INDEX rtOpenedFiles_sessionId_index USING BTREE ON rtOpenedFiles(sessionId);
CREATE INDEX rtOpenedFiles_pathId_index    USING BTREE ON rtOpenedFiles(pathId);



CREATE TABLE IF NOT EXISTS rtClosedFiles (
  id            INT NOT NULL PRIMARY KEY,
  sessionId     INT NOT NULL,
  pathId	INT NOT NULL,
  openT         DATETIME NOT NULL,
  closeT        DATETIME NOT NULL,
  bytesR        BIGINT UNSIGNED NOT NULL,
  bytesW        BIGINT UNSIGNED NOT NULL
);
CREATE INDEX rtClosedFiles_id_index        USING BTREE ON rtClosedFiles(id);
CREATE INDEX rtClosedFiles_sessionId_index USING BTREE ON rtClosedFiles(sessionId);
CREATE INDEX rtClosedFiles_pathId_index    USING BTREE ON rtClosedFiles(pathId);



CREATE TABLE IF NOT EXISTS users (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userName      VARCHAR(24) NOT NULL
);

CREATE INDEX users_id_index USING BTREE ON users(id);



CREATE TABLE IF NOT EXISTS hosts (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  hostName      VARCHAR(64) NOT NULL
);
CREATE INDEX hosts_id_index USING BTREE ON hosts(id);



CREATE TABLE IF NOT EXISTS paths (
  id            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  path          VARCHAR(256) NOT NULL
);
CREATE INDEX paths_id_index USING BTREE ON paths(id);
CREATE INDEX paths_path_index ON paths(path(256));


CREATE TABLE IF NOT EXISTS rtHour (
  min           DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT
);

CREATE TABLE IF NOT EXISTS rtDay (
  hour          DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT
);

CREATE TABLE IF NOT EXISTS rtMonth (
  day           DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT
);

CREATE TABLE IF NOT EXISTS rtYear (
  month         DATE,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT
);

CREATE TABLE IF NOT EXISTS rtAllYears (
  year          TINY INT,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT
);
