/*****************************************************************************/
/*                                                                           */
/*                             initRTMySQL.mysql                             */
/*                                                                           */
/* (c) 2005 by the Board of Trustees of the Leland Stanford, Jr., University */
/*                            All Rights Reserved                            */
/*       Produced by Jacek Becla for Stanford University under contract      */
/*              DE-AC02-76SF00515 with the Department of Energy              */
/*****************************************************************************/

# $Id$

DROP DATABASE IF EXISTS xrdmon_test;

CREATE DATABASE IF NOT EXISTS xrdmon_test;
USE xrdmon_test;

CREATE TABLE IF NOT EXISTS rtOpenedSessions (
  id            MEDIUMINT UNSIGNED NOT NULL PRIMARY KEY,
  userId        SMALLINT  UNSIGNED NOT NULL,
  pId           SMALLINT  UNSIGNED NOT NULL,
  clientHId     SMALLINT  UNSIGNED NOT NULL,
  serverHId     SMALLINT  UNSIGNED NOT NULL,
  INDEX (userId),
  INDEX (pId),
  INDEX (clientHId),
  INDEX (serverHId)
);


CREATE TABLE IF NOT EXISTS rtClosedSessions (
  id            INT       UNSIGNED NOT NULL PRIMARY KEY,
  userId        SMALLINT  UNSIGNED NOT NULL,
  pId           SMALLINT  UNSIGNED NOT NULL,
  clientHId     SMALLINT  UNSIGNED NOT NULL,
  serverHId     SMALLINT  UNSIGNED NOT NULL,
  duration      MEDIUMINT UNSIGNED NOT NULL,
  disconnectT   DATETIME  NOT NULL,
  INDEX (userId),
  INDEX (pId),
  INDEX (clientHId),
  INDEX (serverHId),
  INDEX (disconnectT)
);


CREATE TABLE IF NOT EXISTS rtOpenedFiles (
  id            INT       UNSIGNED NOT NULL PRIMARY KEY,
  sessionId     INT       UNSIGNED NOT NULL,
  pathId        MEDIUMINT UNSIGNED NOT NULL,
  openT         DATETIME  NOT NULL,
  INDEX (sessionId),
  INDEX (pathId),
  INDEX (openT)
);


CREATE TABLE IF NOT EXISTS rtClosedFiles (
  id            INT       UNSIGNED NOT NULL PRIMARY KEY,
  sessionId     INT       UNSIGNED NOT NULL,
  pathId	MEDIUMINT UNSIGNED NOT NULL,
  openT         DATETIME  NOT NULL,
  closeT        DATETIME  NOT NULL,
  bytesR        BIGINT    UNSIGNED NOT NULL,
  bytesW        BIGINT    UNSIGNED NOT NULL,
  INDEX (sessionId),
  INDEX (pathId),
  INDEX (closeT)
);


CREATE TABLE IF NOT EXISTS users (
  id            SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name          VARCHAR(24) NOT NULL
);


CREATE TABLE IF NOT EXISTS hosts (
  id            SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  hostName      VARCHAR(64) NOT NULL
);


CREATE TABLE IF NOT EXISTS paths (
  id            MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  typeId        TINYINT NOT NULL,   # BaBar specific
  skimId        TINYINT NOT NULL,   # BaBar specific
  size          BIGINT  NOT NULL DEFAULT 0,
  hash          MEDIUMINT NOT NULL DEFAULT 0,
  name          VARCHAR(255) NOT NULL,
  INDEX (typeId),
  INDEX (skimId)
);


# one row per minute, keeps last 60 minutes
CREATE TABLE IF NOT EXISTS statsLastHour (
  seqNo         TINYINT UNSIGNED NOT NULL PRIMARY KEY,
  date          DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT,
  INDEX (date)
);


# one row per hour, keeps last 24 hours
CREATE TABLE IF NOT EXISTS statsLastDay (
  seqNo         TINYINT UNSIGNED NOT NULL PRIMARY KEY,
  date          DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT,
  INDEX (date)
);


# one row per day, keeps last 31 days
CREATE TABLE IF NOT EXISTS statsLastMonth (
  seqNo         TINYINT UNSIGNED NOT NULL PRIMARY KEY,
  date          DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT,
  INDEX (date)
);


# one row per month, growing indefinitely
CREATE TABLE IF NOT EXISTS statsAllMonths (
  date          DATETIME,
  noJobs        SMALLINT,
  noUsers       SMALLINT,
  noUniqueF     INT,
  noNonUniqueF  INT,
  minJobs       SMALLINT,
  minUsers      SMALLINT,
  minUniqueF    INT,
  minNonUniqueF INT,
  maxJobs       SMALLINT,
  maxUsers      SMALLINT,
  maxUniqueF    INT,
  maxNonUniqueF INT,
  INDEX (date)
);


# reflects changes since last entry, and last update
CREATE TABLE IF NOT EXISTS rtChanges (
  jobs          SMALLINT,
  jobs_p        FLOAT,
  users         SMALLINT,
  users_p       FLOAT,
  uniqueF       SMALLINT,
  uniqueF_p     FLOAT,
  nonUniqueF    SMALLINT,
  nonUniqueF_p  FLOAT,
  lastUpdate    DATETIME
);

# compressed info for top performers (top users)
CREATE TABLE IF NOT EXISTS topPerfUsersNow (
  theId      INT NOT NULL,    # user Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL     # [MB]
);
CREATE TABLE IF NOT EXISTS topPerfUsersPast (
  theId      INT NOT NULL,    # user Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  volume     INT NOT NULL,
  timePeriod VARCHAR(8)       # "hour", "month", "year"
);

# compressed info for top performers (top skims)
CREATE TABLE IF NOT EXISTS topPerfSkimsNow (
  theId      INT NOT NULL,    # skim Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  users      INT NOT NULL
);
CREATE TABLE IF NOT EXISTS topPerfSkimsPast (
  theId      INT NOT NULL,    # skim Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  users      INT NOT NULL,
  volume     INT NOT NULL,
  timePeriod VARCHAR(8)       # "hour", "month", "year"
);

# compressed info for top performers (top files)
CREATE TABLE IF NOT EXISTS topPerfFilesNow (
  theId      INT NOT NULL,    # path Id
  jobs       INT NOT NULL,
  fSize      INT NOT NULL     # [MB]
);
CREATE TABLE IF NOT EXISTS topPerfFilesPast (
  theId      INT NOT NULL,    # path Id
  jobs       INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  volume     INT NOT NULL,
  timePeriod VARCHAR(8)       # "hour", "month", "year"
);


# compressed info for top performers (top skims)
CREATE TABLE IF NOT EXISTS topPerfTypesNow (
  theId      INT NOT NULL,    # type Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  users      INT NOT NULL
);
CREATE TABLE IF NOT EXISTS topPerfTypesPast (
  theId      INT NOT NULL,    # type Id
  jobs       INT NOT NULL,
  files      INT NOT NULL,
  fSize      INT NOT NULL,    # [MB]
  users      INT NOT NULL,
  volume     INT NOT NULL,
  timePeriod VARCHAR(8)       # "hour", "month", "year"
);


###########################
### BaBar specific below
###########################


# e.g.: SP, PR, SPskims, PRskims
CREATE TABLE IF NOT EXISTS fileTypes (
  name         VARCHAR(16),
  id           TINYINT NOT NULL AUTO_INCREMENT PRIMARY KEY
);


CREATE TABLE IF NOT EXISTS skimNames (
  name         VARCHAR(32),
  id           TINYINT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

